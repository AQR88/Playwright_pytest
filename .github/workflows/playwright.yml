name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps

      - name: Run tests with Pytest + Allure
        run: pytest --headed --my_browser=chromium --alluredir=allure-results

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 7

  deploy:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure Report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages

      - name: Notify Slack about test result
        if: always()
        run: |
          STATUS="${{ needs.test.result }}"
          REPO="${{ github.repository }}"
          PAGES_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          COMMIT="${{ github.sha }}"
          BRANCH="${{ github.ref_name }}"
          MESSAGE="ðŸ§ª *Playwright Test Run Result*\n\nâ€¢ *Repo:* ${REPO}\nâ€¢ *Branch:* ${BRANCH}\nâ€¢ *Status:* ${STATUS}\nâ€¢ *Report:* ${PAGES_URL}\nâ€¢ *Commit:* ${COMMIT}"

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$MESSAGE\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
